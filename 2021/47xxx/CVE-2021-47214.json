{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CVE Program Container",
        "references": [
          {
            "url": "https://git.kernel.org/stable/c/b5069d44e2fbc4a9093d005b3ef0949add3dd27e",
            "tags": [
              "x_transferred"
            ]
          },
          {
            "url": "https://git.kernel.org/stable/c/cc30042df6fcc82ea18acf0dace831503e60a0b7",
            "tags": [
              "x_transferred"
            ]
          }
        ],
        "providerMetadata": {
          "orgId": "af854a3a-2127-422b-91ae-364da2661108",
          "shortName": "CVE",
          "dateUpdated": "2024-08-04T05:32:07.447Z"
        }
      },
      {
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2021-47214",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-04-12T16:35:56.915589Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-05-23T19:01:23.558Z"
        },
        "title": "CISA ADP Vulnrichment"
      }
    ],
    "cna": {
      "title": "hugetlb, userfaultfd: fix reservation restore on userfaultfd error",
      "affected": [
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "c7b1850dfb41",
              "lessThan": "b5069d44e2fb",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "c7b1850dfb41",
              "lessThan": "cc30042df6fc",
              "versionType": "git"
            }
          ],
          "programFiles": [
            "mm/hugetlb.c"
          ],
          "defaultStatus": "unaffected"
        },
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "5.14"
            },
            {
              "status": "unaffected",
              "version": "0",
              "lessThan": "5.14",
              "versionType": "custom"
            },
            {
              "status": "unaffected",
              "version": "5.15.5",
              "versionType": "custom",
              "lessThanOrEqual": "5.15.*"
            },
            {
              "status": "unaffected",
              "version": "5.16",
              "versionType": "original_commit_for_fix",
              "lessThanOrEqual": "*"
            }
          ],
          "programFiles": [
            "mm/hugetlb.c"
          ],
          "defaultStatus": "affected"
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/b5069d44e2fbc4a9093d005b3ef0949add3dd27e"
        },
        {
          "url": "https://git.kernel.org/stable/c/cc30042df6fcc82ea18acf0dace831503e60a0b7"
        }
      ],
      "x_generator": {
        "engine": "bippy-a5840b7849dd"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nhugetlb, userfaultfd: fix reservation restore on userfaultfd error\n\nCurrently in the is_continue case in hugetlb_mcopy_atomic_pte(), if we\nbail out using \"goto out_release_unlock;\" in the cases where idx >=\nsize, or !huge_pte_none(), the code will detect that new_pagecache_page\n== false, and so call restore_reserve_on_error().  In this case I see\nrestore_reserve_on_error() delete the reservation, and the following\ncall to remove_inode_hugepages() will increment h->resv_hugepages\ncausing a 100% reproducible leak.\n\nWe should treat the is_continue case similar to adding a page into the\npagecache and set new_pagecache_page to true, to indicate that there is\nno reservation to restore on the error path, and we need not call\nrestore_reserve_on_error().  Rename new_pagecache_page to\npage_in_pagecache to make that clear."
        }
      ],
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-05-29T05:04:01.949Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2021-47214",
    "state": "PUBLISHED",
    "dateUpdated": "2024-08-04T05:32:07.447Z",
    "dateReserved": "2024-04-10T18:59:19.528Z",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "datePublished": "2024-04-10T19:01:54.543Z",
    "assignerShortName": "Linux"
  },
  "dataVersion": "5.1"
}