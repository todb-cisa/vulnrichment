{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-8374",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "total"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-09-03T13:44:46.158175Z"
              }
            }
          }
        ],
        "affected": [
          {
            "cpes": [
              "cpe:2.3:a:ultimaker:cura:*:*:*:*:*:*:*:*"
            ],
            "vendor": "ultimaker",
            "product": "cura",
            "versions": [
              {
                "status": "affected",
                "version": "5.7.0-beta.1",
                "versionType": "semver",
                "lessThanOrEqual": "5.7.2"
              }
            ],
            "defaultStatus": "unknown"
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-09-03T13:47:30.981Z"
        }
      }
    ],
    "cna": {
      "tags": [
        "x_open-source"
      ],
      "title": "Arbitrary Code Injection in Cura",
      "source": {
        "discovery": "UNKNOWN"
      },
      "metrics": [
        {
          "format": "CVSS",
          "cvssV3_1": {
            "scope": "UNCHANGED",
            "version": "3.1",
            "baseScore": 7.8,
            "attackVector": "LOCAL",
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "integrityImpact": "HIGH",
            "userInteraction": "REQUIRED",
            "attackComplexity": "LOW",
            "availabilityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "HIGH"
          },
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ]
        }
      ],
      "affected": [
        {
          "repo": "https://github.com/Ultimaker/Cura",
          "vendor": "Ultimaker",
          "product": "Cura",
          "versions": [
            {
              "status": "affected",
              "changes": [
                {
                  "at": "5.8.0-RC1",
                  "status": "unaffected"
                }
              ],
              "version": "5.7.0-beta.1",
              "versionType": "semver",
              "lessThanOrEqual": "5.7.2"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "references": [
        {
          "url": "https://github.com/Ultimaker/Cura/commit/285a241eb28da3188c977f85d68937c0dad79c50"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.2.0"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "UltiMaker Cura slicer versions 5.7.0-beta.1 through 5.7.2 are vulnerable to code injection via the 3MF format reader (/plugins/ThreeMFReader.py). The vulnerability arises from improper handling of the drop_to_buildplate property within 3MF files, which are ZIP archives containing the model data. When a 3MF file is loaded in Cura, the value of the drop_to_buildplate property is passed to the Python eval() function without proper sanitization, allowing an attacker to execute arbitrary code by crafting a malicious 3MF file. This vulnerability poses a significant risk as 3MF files are commonly shared via 3D model databases.",
          "supportingMedia": [
            {
              "type": "text/html",
              "value": "UltiMaker Cura slicer versions 5.7.0-beta.1 through 5.7.2 are vulnerable to code injection via the 3MF format reader (/plugins/ThreeMFReader.py). The vulnerability arises from improper handling of the <code>drop_to_buildplate</code> property within 3MF files, which are ZIP archives containing the model data. When a 3MF file is loaded in Cura, the value of the <code>drop_to_buildplate</code> property is passed to the Python <code>eval()</code> function without proper sanitization, allowing an attacker to execute arbitrary code by crafting a malicious 3MF file. This vulnerability poses a significant risk as 3MF files are commonly shared via 3D model databases.",
              "base64": false
            }
          ]
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-94",
              "description": "CWE-94"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
        "shortName": "Checkmarx",
        "dateUpdated": "2024-09-03T10:09:11.016Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-8374",
    "state": "PUBLISHED",
    "dateUpdated": "2024-09-03T13:47:37.496Z",
    "dateReserved": "2024-09-02T11:18:30.693Z",
    "assignerOrgId": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
    "datePublished": "2024-09-03T10:01:12.871Z",
    "assignerShortName": "Checkmarx"
  },
  "dataVersion": "5.1"
}