{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-35880",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-05-20T14:09:22.346096Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-05-23T19:01:24.769Z"
        },
        "title": "CISA ADP Vulnrichment"
      }
    ],
    "cna": {
      "title": "io_uring/kbuf: hold io_buffer_list reference over mmap",
      "affected": [
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "09f7520048ea",
              "lessThan": "65938e81df21",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "5cf4f52e6d8a",
              "lessThan": "5fd8e2359498",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "5cf4f52e6d8a",
              "lessThan": "561e4f9451d6",
              "versionType": "git"
            }
          ],
          "programFiles": [
            "io_uring/io_uring.c",
            "io_uring/kbuf.c",
            "io_uring/kbuf.h"
          ],
          "defaultStatus": "unaffected"
        },
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "6.7"
            },
            {
              "status": "unaffected",
              "version": "0",
              "lessThan": "6.7",
              "versionType": "custom"
            },
            {
              "status": "unaffected",
              "version": "6.6.26",
              "versionType": "custom",
              "lessThanOrEqual": "6.6.*"
            },
            {
              "status": "unaffected",
              "version": "6.8.5",
              "versionType": "custom",
              "lessThanOrEqual": "6.8.*"
            },
            {
              "status": "unaffected",
              "version": "6.9",
              "versionType": "original_commit_for_fix",
              "lessThanOrEqual": "*"
            }
          ],
          "programFiles": [
            "io_uring/io_uring.c",
            "io_uring/kbuf.c",
            "io_uring/kbuf.h"
          ],
          "defaultStatus": "affected"
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/65938e81df2197203bda4b9a0c477e7987218d66"
        },
        {
          "url": "https://git.kernel.org/stable/c/5fd8e2359498043e0b5329a05f02d10a9eb91eb9"
        },
        {
          "url": "https://git.kernel.org/stable/c/561e4f9451d65fc2f7eef564e0064373e3019793"
        }
      ],
      "x_generator": {
        "engine": "bippy-a5840b7849dd"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/kbuf: hold io_buffer_list reference over mmap\n\nIf we look up the kbuf, ensure that it doesn't get unregistered until\nafter we're done with it. Since we're inside mmap, we cannot safely use\nthe io_uring lock. Rely on the fact that we can lookup the buffer list\nunder RCU now and grab a reference to it, preventing it from being\nunregistered until we're done with it. The lookup returns the\nio_buffer_list directly with it referenced."
        }
      ],
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-05-29T05:30:36.264Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-35880",
    "state": "PUBLISHED",
    "dateUpdated": "2024-08-01T03:55:53.967Z",
    "dateReserved": "2024-05-17T13:50:33.111Z",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "datePublished": "2024-05-19T08:34:37.262Z",
    "assignerShortName": "Linux"
  },
  "dataVersion": "5.1"
}