{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-45311",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "poc"
                  },
                  {
                    "Automatable": "yes"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-09-03T14:01:33.229542Z"
              }
            }
          }
        ],
        "affected": [
          {
            "cpes": [
              "cpe:2.3:a:quinn_project:quinn:*:*:*:*:*:rust:*:*"
            ],
            "vendor": "quinn_project",
            "product": "quinn",
            "versions": [
              {
                "status": "affected",
                "version": "0.11.0",
                "lessThan": "0.11.7",
                "versionType": "custom"
              }
            ],
            "defaultStatus": "unknown"
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-09-03T14:04:29.165Z"
        }
      }
    ],
    "cna": {
      "title": "Denial of service in quinn-proto when using `Endpoint::retry()`",
      "source": {
        "advisory": "GHSA-vr26-jcq5-fjj8",
        "discovery": "UNKNOWN"
      },
      "metrics": [
        {
          "cvssV3_1": {
            "scope": "UNCHANGED",
            "version": "3.1",
            "baseScore": 7.5,
            "attackVector": "NETWORK",
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "integrityImpact": "NONE",
            "userInteraction": "NONE",
            "attackComplexity": "LOW",
            "availabilityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "NONE"
          }
        }
      ],
      "affected": [
        {
          "vendor": "quinn-rs",
          "product": "quinn",
          "versions": [
            {
              "status": "affected",
              "version": ">= 0.11.0, < 0.11.7"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://github.com/quinn-rs/quinn/security/advisories/GHSA-vr26-jcq5-fjj8",
          "name": "https://github.com/quinn-rs/quinn/security/advisories/GHSA-vr26-jcq5-fjj8",
          "tags": [
            "x_refsource_CONFIRM"
          ]
        },
        {
          "url": "https://github.com/quinn-rs/quinn/commit/e01609ccd8738bd438d86fa7185a0f85598cb58f",
          "name": "https://github.com/quinn-rs/quinn/commit/e01609ccd8738bd438d86fa7185a0f85598cb58f",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-proto/src/endpoint.rs#L213",
          "name": "https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-proto/src/endpoint.rs#L213",
          "tags": [
            "x_refsource_MISC"
          ]
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": "Quinn is a pure-Rust, async-compatible implementation of the IETF QUIC transport protocol. As of quinn-proto 0.11, it is possible for a server to `accept()`, `retry()`, `refuse()`, or `ignore()` an `Incoming` connection. However, calling `retry()` on an unvalidated connection exposes the server to a likely panic in the following situations:  1. Calling `refuse` or `ignore` on the resulting validated connection, if a duplicate initial packet is received. This issue can go undetected until a server's `refuse()`/`ignore()` code path is exercised, such as to stop a denial of service attack. 2. Accepting when the initial packet for the resulting validated connection fails to decrypt or exhausts connection IDs, if a similar initial packet that successfully decrypts and doesn't exhaust connection IDs is received. This issue can go undetected if clients are well-behaved. The former situation was observed in a real application, while the latter is only theoretical."
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-670",
              "description": "CWE-670: Always-Incorrect Control Flow Implementation"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M",
        "dateUpdated": "2024-09-02T16:45:39.465Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-45311",
    "state": "PUBLISHED",
    "dateUpdated": "2024-09-03T14:04:46.433Z",
    "dateReserved": "2024-08-26T18:25:35.444Z",
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "datePublished": "2024-09-02T16:45:39.465Z",
    "assignerShortName": "GitHub_M"
  },
  "dataVersion": "5.1"
}