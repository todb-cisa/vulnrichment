{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2024-38519",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "poc"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "total"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-07-02T15:17:37.665466Z"
              }
            }
          }
        ],
        "affected": [
          {
            "cpes": [
              "cpe:2.3:a:yt-dlp_project:yt-dlp:-:*:*:*:*:*:*:*"
            ],
            "vendor": "yt-dlp_project",
            "product": "yt-dlp",
            "versions": [
              {
                "status": "affected",
                "version": "0",
                "lessThan": "2024.07.01",
                "versionType": "custom"
              }
            ],
            "defaultStatus": "unknown"
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-07-02T15:23:28.403Z"
        }
      }
    ],
    "cna": {
      "title": "yt-dlp and youtube-dl vulnerable to file system modification and RCE through improper file-extension sanitization",
      "source": {
        "advisory": "GHSA-79w7-vh3h-8g4j",
        "discovery": "UNKNOWN"
      },
      "metrics": [
        {
          "format": "CVSS",
          "cvssV3_1": {
            "scope": "UNCHANGED",
            "version": "3.1",
            "baseScore": 7.8,
            "attackVector": "LOCAL",
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
            "integrityImpact": "HIGH",
            "userInteraction": "REQUIRED",
            "attackComplexity": "LOW",
            "availabilityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "HIGH"
          },
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ]
        }
      ],
      "affected": [
        {
          "vendor": "yt-dlp",
          "product": "yt-dlp",
          "versions": [
            {
              "status": "affected",
              "version": "< 2024.07.01",
              "lessThan": "2024.07.01",
              "versionType": "date"
            }
          ]
        },
        {
          "repo": "https://github.com/ytdl-org/youtube-dl",
          "vendor": "ytdl-org",
          "product": "youtube-dl",
          "versions": [
            {
              "status": "affected",
              "version": ">= 2015.01.25",
              "versionType": "date",
              "lessThanOrEqual": "2021.12.17"
            },
            {
              "status": "affected",
              "changes": [
                {
                  "at": "d42a222",
                  "status": "unaffected"
                }
              ],
              "version": "nightly",
              "lessThan": "2024-07-03",
              "versionType": "date"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "references": [
        {
          "url": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j",
          "name": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j",
          "tags": [
            "x_refsource_CONFIRM"
          ]
        },
        {
          "url": "https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a",
          "name": "https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01",
          "name": "https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp",
          "name": "https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://github.com/dirkf/youtube-dl/security/advisories/GHSA-22fp-mf44-f2mq",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://securitylab.github.com/advisories/GHSL-2024-089_youtube-dl/",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://github.com/ytdl-org/youtube-dl/pull/32830",
          "tags": [
            "x_refsource_MISC"
          ]
        },
        {
          "url": "https://github.com/ytdl-org/youtube-dl/commit/d42a222ed541b96649396ef00e19552aef0f09ec",
          "tags": [
            "x_refsource_MISC"
          ]
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": "`yt-dlp` and `youtube-dl` are command-line audio/video downloaders. Prior to the fixed versions,\u00a0`yt-dlp` and `youtube-dl` do not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` and `youtube-dl` also read config from the working directory (and on Windows executables will be executed from the `yt-dlp` or `youtube-dl` directory), this could lead to arbitrary code being executed.\n\n\n\n\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions. `youtube-dl` fixes this issue in commit `d42a222` on the `master` branch and in nightly builds tagged 2024-07-03 or later. This might mean some very uncommon extensions might not get downloaded, however it will also limit the possible exploitation surface. In addition to upgrading, have `.%(ext)s` at the end of the output template and make sure the user trusts the websites that they are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like one's user directory, `system32`, or other binaries locations. For users who are not able to upgrade, keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`); make sure the extension of the media to download is a common video/audio/sub/... one; try to avoid the generic extractor; and/or use `--ignore-config --config-location ...` to not load config from common locations.",
          "supportingMedia": [
            {
              "type": "text/html",
              "value": "<p>`yt-dlp` and `youtube-dl` are command-line audio/video downloaders. Prior to the fixed versions,&nbsp;`yt-dlp` and `youtube-dl` do not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` and `youtube-dl` also read config from the working directory (and on Windows executables will be executed from the `yt-dlp` or `youtube-dl` directory), this could lead to arbitrary code being executed.</p><p><br></p><p>`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions. `youtube-dl` fixes this issue in commit `d42a222` on the `master` branch and in nightly builds tagged 2024-07-03 or later. This might mean some very uncommon extensions might not get downloaded, however it will also limit the possible exploitation surface. In addition to upgrading, have `.%(ext)s` at the end of the output template and make sure the user trusts the websites that they are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like one's user directory, `system32`, or other binaries locations. For users who are not able to upgrade, keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`); make sure the extension of the media to download is a common video/audio/sub/... one; try to avoid the generic extractor; and/or use `--ignore-config --config-location ...` to not load config from common locations.</p>",
              "base64": false
            }
          ]
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-669",
              "description": "CWE-669 Incorrect Resource Transfer Between Spheres"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M",
        "dateUpdated": "2024-07-03T23:32:13.285Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-38519",
    "state": "PUBLISHED",
    "dateUpdated": "2024-07-24T18:21:58.650Z",
    "dateReserved": "2024-06-18T16:37:02.728Z",
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "datePublished": "2024-07-02T13:47:36.399Z",
    "assignerShortName": "GitHub_M"
  },
  "dataVersion": "5.1"
}