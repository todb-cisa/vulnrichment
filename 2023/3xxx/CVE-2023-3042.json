{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CVE Program Container",
        "references": [
          {
            "url": "https://www.dotcms.com/security/SI-68",
            "tags": [
              "x_transferred"
            ]
          }
        ],
        "providerMetadata": {
          "orgId": "af854a3a-2127-422b-91ae-364da2661108",
          "shortName": "CVE",
          "dateUpdated": "2024-08-02T06:41:04.130Z"
        }
      },
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2023-3042",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-09-13T15:24:50.892460Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-09-13T15:24:58.954Z"
        }
      }
    ],
    "cna": {
      "title": "CNA SHORTNAME: dotCMSORG UUID: 5b9d93f2-25c7-46b4-ab60-d201718c9dd8",
      "source": {
        "discovery": "UNKNOWN"
      },
      "impacts": [
        {
          "capecId": "CAPEC-247",
          "descriptions": [
            {
              "lang": "en",
              "value": "CAPEC-247 XSS Using Invalid Characters"
            }
          ]
        }
      ],
      "metrics": [
        {
          "format": "CVSS",
          "cvssV3_1": {
            "scope": "UNCHANGED",
            "version": "3.1",
            "baseScore": 5.3,
            "attackVector": "NETWORK",
            "baseSeverity": "MEDIUM",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "integrityImpact": "NONE",
            "userInteraction": "NONE",
            "attackComplexity": "LOW",
            "availabilityImpact": "NONE",
            "privilegesRequired": "NONE",
            "confidentialityImpact": "LOW"
          },
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ]
        }
      ],
      "affected": [
        {
          "vendor": "dotCMS",
          "product": "dotCMS core",
          "versions": [
            {
              "status": "affected",
              "version": "5.3.8"
            },
            {
              "status": "affected",
              "version": "21.06"
            },
            {
              "status": "affected",
              "version": "22.03"
            },
            {
              "status": "affected",
              "version": "23.01"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "references": [
        {
          "url": "https://www.dotcms.com/security/SI-68"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.1.0-dev"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In dotCMS, versions mentioned, a flaw in the NormalizationFilter does not strip double slashes (//) from URLs, potentially enabling bypasses for XSS and access controls. An example affected URL is  https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp , which should return a 404 response but didn't. \n\nThe oversight in the default invalid URL character list can be viewed at the provided  GitHub link https://github.com/dotCMS/core/blob/master/dotCMS/src/main/java/com/dotcms/filters/NormalizationFilter.java#L37 .\u00a0\n\nTo mitigate, users can block URLs with double slashes at firewalls or utilize dotCMS config variables.\n\nSpecifically, they can use the DOT_URI_NORMALIZATION_FORBIDDEN_STRINGS environmental variable to add // to the list of invalid strings. \n\nAdditionally, the DOT_URI_NORMALIZATION_FORBIDDEN_REGEX variable offers more detailed control, for instance, to block //html.* URLs.\n\nFix Version:23.06+, LTS 22.03.7+, LTS 23.01.4+\n",
          "supportingMedia": [
            {
              "type": "text/html",
              "value": "In dotCMS, versions mentioned, a flaw in the NormalizationFilter does not strip double slashes (//) from URLs, potentially enabling bypasses for XSS and access controls. An example affected URL is <a target=\"_blank\" rel=\"nofollow\" href=\"https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp\">https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp</a>, which should return a 404 response but didn't. <br><br>The oversight in the default invalid URL character list can be viewed at the provided <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/dotCMS/core/blob/master/dotCMS/src/main/java/com/dotcms/filters/NormalizationFilter.java#L37\">GitHub link</a>.&nbsp;<br><br>To mitigate, users can block URLs with double slashes at firewalls or utilize dotCMS config variables.<br><br>Specifically, they can use the DOT_URI_NORMALIZATION_FORBIDDEN_STRINGS environmental variable to add // to the list of invalid strings. <br><br>Additionally, the DOT_URI_NORMALIZATION_FORBIDDEN_REGEX variable offers more detailed control, for instance, to block //html.* URLs.<br><br><table><tbody><tr><th>Fix Version:</th><td>23.06+, LTS 22.03.7+, LTS 23.01.4+</td></tr></tbody></table><br>",
              "base64": false
            }
          ]
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "lang": "en",
              "type": "CWE",
              "cweId": "CWE-20",
              "description": "CWE-20 Improper Input Validation"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "5b9d93f2-25c7-46b4-ab60-d201718c9dd8",
        "shortName": "dotCMS",
        "dateUpdated": "2023-10-23T16:58:08.007Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2023-3042",
    "state": "PUBLISHED",
    "dateUpdated": "2024-09-13T15:25:03.957Z",
    "dateReserved": "2023-06-01T20:26:04.134Z",
    "assignerOrgId": "5b9d93f2-25c7-46b4-ab60-d201718c9dd8",
    "datePublished": "2023-10-17T22:52:05.453Z",
    "assignerShortName": "dotCMS"
  },
  "dataVersion": "5.1"
}